version: '3.8'

services:
  hasura:
    image: hasura/graphql-engine:v2.0.0-alpha.4
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '${HASURA_PORT:-8083}:8080'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ADMIN_SECRET:-hasura}'
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${HASURA_JWT_SECRET:-h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk}"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: 'anonymous'
    healthcheck:
      test: ['CMD', 'wget', '-qO', '-', 'http://hasura:8080/healthz']
      interval: 5s
      timeout: 5s
      retries: 20

  postgres:
    image: postgres:13.2
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - ./.docker-data/pg:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 60

  adminer:
    image: adminer:4.8.1
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '${ADMINER_PORT:-8081}:8080'
